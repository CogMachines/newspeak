Newspeak3
'Hopscotch-Core'
class HopscotchForHTML5 usingPlatform: p = (|
	private Context = p graphics Context.

	private global = p aliens global.
	private document = global at: 'document'.
	private body = document at: 'body'.
	
	public core = self.
|)
(
class CanvasFragment withExtent: e = LeafFragment (|
private alien = document createElement: 'canvas'.
|alien at: 'width' put: e x.
alien at: 'height' put: e y.
(alien at: 'style') at: 'position' put: 'relative')
('as yet unclassified'
context = (
	^Context on: (alien getContext: '2d')
)
createVisual = (
	^alien
)
keyDownAction: onKeyPressed <[:String]> = (
	(* The canvas element itself doesn't seem to get key events. *)
	body
		addEventListener: 'keydown'
		with: [:e | onKeyPressed value: (String fromCharCode: (e at: 'keyCode'))]
)
mouseDownAction: onMouseDown <[:Point]> = (
	alien
		addEventListener: 'mousedown'
		with: [:e | onMouseDown value: (e at: 'offsetX') @ (e at: 'offsetY')].
)
mouseMovedAction: onMouseMoved <[:Point]> = (
	alien
		addEventListener: 'mousemove'
		with: [:e | onMouseMoved value: (e at: 'offsetX') @ (e at: 'offsetY')].
)) : ()
class ColumnComposer definitions: fragments = Composer (|
	definitions = fragments.
|)
('as yet unclassified'
createVisual = (
	| div |
	div:: document createElement: 'div'.
	definitions do: [:fragment |
		| rowDiv |
		rowDiv:: document createElement: 'div'.
		(rowDiv at: 'style') at: 'width' put: '100%'.
		rowDiv appendChild: fragment visual.
		div appendChild: rowDiv].
	^div
)) : ()
class Composer = Fragment ()
() : ()
class Fragment = ()
('as yet unclassified'
createVisual = (
	subclassResponsibility
)
visual = (
	^createVisual
)) : ()
class HopscotchWindow openSubject: s = (|
	public currentPresenter ::= s presenter.

	private alien = document createElement: 'div'.
|(alien at: 'style')
		at: 'borderStyle' put: 'solid';
		at: 'borderWidth' put: '4px';
		at: 'borderRadius' put: '5px';
		at: 'borderColor' put: 'black';
		at: 'padding' put: '2px'.
	body appendChild: alien.
	
	alien appendChild: currentPresenter visual)
() : ()
class HyperlinkFragment label: l action: a = LeafFragment (|
	label = l.
	action = a.
|)
('as yet unclassified'
createVisual = (
	^(document createElement: 'a') 
		at: 'href' put: '#';
		appendChild: (document createTextNode: label);
		at: 'onclick' put: [action value. false];
		yourself
)) : ()
class LeafFragment = Fragment ()
() : ()
class Presenter onSubject: aSubject = Fragment (|
subject ::= aSubject.
|)
('as yet unclassified'
alert: text = (
	global alert: text
)
canvas: extent <Point> = (
	^CanvasFragment withExtent: extent
)
column: definitions = (
	^ColumnComposer definitions: definitions
)
createVisual = (
	^definition visual
)
definition ^<Fragment> = (
	subclassResponsibility
)
label: label <String> = (
	^StaticLabelFragment text: label
)
link: label <String> action: block <[]> = (
	^HyperlinkFragment label: label action: block
)) : ()
class StaticLabelFragment text: t = LeafFragment (|
	text = t.
|)
('as yet unclassified'
createVisual = (
	^document createTextNode: text
)) : ()
class Subject onModel: aModel = (|
model ::= aModel.
presenterX
|)
('as yet unclassified'
createPresenter = (
	subclassResponsibility
)
presenter = (
	presenterX isNil ifTrue: [presenterX:: createPresenter].
	^presenterX
)) : ()) : ()