Newspeak3
'NS2V8'
class RuntimeForV8 packageUsing: manifest = (
(* Provides the platform object for Newspeak on Dart.

Copyright 2012 Google Inc.
Copyright 2013 Ryan Macnak

Licensed under the Apache License, Version 2.0 (the ''License''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0 *)|
	Kernel = manifest KernelForV8.
	Aliens = manifest AliensForV8.
	Collections = manifest Collections.
	Graphics = manifest GraphicsForHTML5.
	Hopscotch = manifest HopscotchForHTML5.
	Mirrors = manifest MirrorsForV8.
	Streams = manifest Streams.
	Time = manifest TimeForV8.
	
	CombinatorialParsing = manifest CombinatorialParsing.
	NewspeakGrammar = manifest NewspeakGrammar.
	NewspeakASTs = manifest NewspeakASTs.
	NewspeakParsing = manifest NewspeakParsing.
	
	JavascriptGeneration = manifest JavascriptGeneration.
	Compilation =  manifest Newspeak2V8Compilation mixinApply: manifest NewspeakCompilation.
	
	accept16px = manifest accept16px.
	cancel16px = manifest cancel16px.
	disclosureClosedImage = manifest disclosureClosedImage.
	disclosureTransitionImage = manifest disclosureTransitionImage.
	disclosureOpenImage = manifest disclosureOpenImage.
|)
(
class Platform usingVmMirror: vmmirror = (|
	namespace = outer RuntimeForV8.
	public kernel = Object enclosingObject. (* Instantiated specially to avoid bootstrapping issues. *)
	public aliens = Future computing: [Aliens usingPlatform: self].
	public collections = Future computing: [Collections usingPlatform: self].
	public graphics = Future computing: [Graphics usingPlatform: self].
	public hopscotch = Future computing: [Hopscotch usingPlatform: self].
	public mirrors = Future computing: [Mirrors usingPlatform: self vmMirror: vmmirror].
	public streams = Future computing: [Streams usingPlatform: self].
	public time = Future computing: [Time usingPlatform: self].
|kernel platform: self)
() : ()'as yet unclassified'
using: vmmirror = (
	Object enclosingObject augmentPrototypes.
	^Platform usingVmMirror: vmmirror
)) : ()