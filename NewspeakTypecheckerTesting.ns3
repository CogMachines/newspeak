Newspeak3
'Newspeak'
class NewspeakTypecheckerTesting usingPlatform: p testing: tc namespace: ns testFramework: minitest = (
(*Describe the class in this comment.*)|
	(* Imports *)
	private TestContext = minitest TestContext.
	private Set = p collections Set.
	
	(* module variables *)
	
	private namespace = ns.
	private typechecker <NewspeakTypechecker> = tc.
|) (
class NewspeakTypecheckerTests = (
(* Describe the class in this comment. *)|

|namespaceAddType: toplevelClass1.
namespaceAddType: toplevelClass2.
namespaceAddType: toplevelClass3) (
'as yet unclassified'
assertNoTypeErrorInMethod: methodSource <String> within: enclosingClass = ( 
	^assertTypeErrors: Set new inMethod: methodSource within: enclosingClass
)
assertTypeErrors: es <Set[TypeError]> inMethod: methodSource <String> within: enclosingClass = (
      | errorSet <Set[TypeError]> |
	[
	errorSet:: typechecker typecheck: methodSource in: enclosingClass.
      errorSet = es ifFalse:[].

			ifFailure: [:message | ^self]
			ifError: [:message | ^self]]
		on: Error (* not Exception, which catches InMidstOfFileinNotifications *)
		do: [:ex | ^self].
)
namespaceAddType: t  = (
	namespace at: t name put: t
)
test: sampleClassSource <String> with: testClassSource <String> = (
	testingStrategy
		test: sampleClassSource
		with: testClassSource
		ifFailure: [:message | failWithMessage: message]
		ifError: [:message | Error new signal: message]
)
public testSampleMethod: sampleMethod <String> with: testMethodBody <String> = (
	test:
'class Sample = () (
	''samples''
',
	sampleMethod,
')'
	with:
'class SampleTest test: sampleClass = ( | sample = sampleClass new. | ) (
	''accessing''
	public test = (',
	testMethodBody,
	')
)'
)
toplevelClass1 = (
	'
Newspeak3
''NewNamespace''
class ToplevelClass1 = (
(*Top level test class for typechecker.*)
|
	public publicUntypedSlot1 <toplevelClass1>
	protectedUntypedSlot2 <toplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6	
|
) (
class N2 = (
|
	public publicUntypedSlot1 <ToplevelClass1>
	protectedUntypedSlot2 <ToplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6		
|
) (
class N2 = (
|
	public publicUntypedSlot1 <ToplevelClass1>
	protectedUntypedSlot2 <ToplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6		
|
) (
''as yet unclassified''
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
) : (
)
private class PrivateNN3 = (
|
	public publicUntypedSlot1 <toplevelClass1>
	protectedUntypedSlot2 <toplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6		
|
) (
''as yet unclassified''
argsWithType: a1 <toplevelClass1 publicN1> and: a2 <toplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
) : (
)
public class PublicNN1 = (
|
	public publicUntypedSlot1 <ToplevelClass1>
	protectedUntypedSlot2 <ToplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6		
|
) (
''as yet unclassified''
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
) : (
)
''as yet unclassified''
argsNoType: a1 and: a2  = (
	
)
argsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
) : (
)
private class PrivateN3 = (
|
	public publicUntypedSlot1 <ToplevelClass1>
	protectedUntypedSlot2 <ToplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6		
|
) (
class NN2 = (
|
	public publicUntypedSlot1 <ToplevelClass1>
	protectedUntypedSlot2 <ToplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6		
|
) (
''as yet unclassified''
argsNoType: a1 and: a2  = (
	
)
argsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
noArgsNoType = (
	
)
noArgsWithExplicitSelf ^ <Self> = (
	
)
noArgsWithType ^ <String> = (
	^''noArgsWithType''
)
private privateArgsNoType: a1 and: a2  = (
	
)
) : (
)
private class PrivateNN3 = (
|
	public publicUntypedSlot1 <ToplevelClass1>
	protectedUntypedSlot2 <ToplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6		
|
) (
''as yet unclassified''
argsNoType: a1 and: a2  = (
	
)
argsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
noArgsNoType = (
	
)
noArgsWithExplicitSelf ^ <Self> = (
	
)
noArgsWithType ^ <String> = (
	^''noArgsWithType''
)
) : (
)
public class PublicNN1 = (
|
	public publicUntypedSlot1 <ToplevelClass1>
	protectedUntypedSlot2 <ToplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6		
|
) (
''as yet unclassified''
argsNoType: a1 and: a2  = (
	
)
argsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
noArgsNoType = (
	
)
noArgsWithExplicitSelf ^ <Self> = (
	
)
noArgsWithType ^ <String> = (
	^''noArgsWithType''
)
) : (
)
''as yet unclassified''
argsNoType: a1 and: a2  = (
	
)
argsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
noArgsNoType = (
	
)
noArgsWithExplicitSelf ^ <Self> = (
	
)
noArgsWithType ^ <String> = (
	^''noArgsWithType''
)
private privateArgsNoType: a1 and: a2  = (
	
)
) : (
)
public class PublicN1 = (
|
	public publicUntypedSlot1 <ToplevelClass1>
	protectedUntypedSlot2 <ToplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6		
|
) (
class NN2 = (
|
	public publicUntypedSlot1 <ToplevelClass1>
	protectedUntypedSlot2 <ToplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6	
|
) (
''as yet unclassified''
argsNoType: a1 and: a2  = (
	
)
argsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
noArgsNoType = (
	
)
noArgsWithExplicitSelf ^ <Self> = (
	
)
noArgsWithType ^ <String> = (
	^''noArgsWithType''
)
private privateArgsNoType: a1 and: a2  = (
	
)
) : (
)
private class PrivateNN3 = (
|
	public publicUntypedSlot1 <ToplevelClass1>
	protectedUntypedSlot2 <ToplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6	
|
) (
''as yet unclassified''
argsNoType: a1 and: a2  = (
	
)
argsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
noArgsNoType = (
	
)
noArgsWithExplicitSelf ^ <Self> = (
	
)
noArgsWithType ^ <String> = (
	^''noArgsWithType''
)
private privateArgsNoType: a1 and: a2  = (
	
)
) : (
)
public class PublicNN1 = (
|
	public publicUntypedSlot1 <ToplevelClass1>
	protectedUntypedSlot2 <ToplevelClass2>
	private privateUntypedSlot3 <Collections OrderedCollection>
	public publicSlot4
	protectedSlot5
	private privateSlot6	
|
) (
''as yet unclassified''
argsNoType: a1 and: a2  = (
	
)
argsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
noArgsNoType = (
	
)
noArgsWithExplicitSelf ^ <Self> = (
	
)
noArgsWithType ^ <String> = (
	^''noArgsWithType''
)
private privateArgsNoType: a1 and: a2  = (
	
)
private privateArgsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
private privateArgsWithType: a1 <toplevelClass1 publicN1> and: a2 <toplevelClass N2>  ^ <Boolean> = (
	^true
)
private privateNoArgsNoType = (
	
)
private privateNoArgsWithExplicitSelf ^ <Self> = (
	
)
private privateNoArgsWithType ^ <Integer> = (
	^3
)
public publicArgsNoType: a1 and: a2  = (
	
)
public publicArgsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
public publicArgsWithType: a1 <toplevelClass1 publicN1> and: a2 <toplevelClass N2>  ^ <Boolean> = (
	^true
)
public publicNoArgsNoType = (
	
)
public publicNoArgsWithExplicitSelf ^ <Self> = (
	
)
public publicNoArgsWithType ^ <String> = (
	^''publicNoArgsWithType''
)
) : (
)
''as yet unclassified''
argsNoType: a1 and: a2  = (
	
)
argsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
noArgsNoType = (
	
)
noArgsWithExplicitSelf ^ <Self> = (
	
)
noArgsWithType ^ <String> = (
	^''noArgsWithType''
)
private privateArgsNoType: a1 and: a2  = (
	
)
) : (
)
''as yet unclassified''
argsNoType: a1 and: a2  = (
	
)
argsNoTypeWithExplicitSelf: a1 and: a2 ^ <Self> = (
	
)
argsWithType: a1 <ToplevelClass1 PublicN1> and: a2 <ToplevelClass N2>  ^ <Symbol> = (
	^#argsWithType:
)
noArgsNoType = (
	
)
noArgsWithExplicitSelf ^ <Self> = (
	
)
noArgsWithType ^ <String> = (
	^''noArgsWithType''
)
private privateArgsNoType: a1 and: a2  = (
	
)
) : (
)

	'
)
toplevelClass2 = (
	
)
toplevelClass3 = (
	
)
) : (
'as yet unclassified'
TEST_CONTEXT = ()
)
) : (
)
