Newspeak3
'NS2JS'
class PlatformForJS packageUsing: ns = NewspeakObject (
"The Platform object for Newspeak on Javascript.

   Copyright 2012 SAP AG.
   
   Licensed under the Apache License, Version 2.0 (the ''License''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0

"|
	
	private CP = ns CombinatorialParsing.
	private BCP = ns BlocklessCombinatorialParsing.
	private BlocklessCombinatorialParsing = BCP mixin |> CP.
	private Newspeak3Grammar = ns Newspeak3Grammar.
	private Newspeak3AST = ns Newspeak3AST.
	private Newspeak3Parsing = ns Newspeak3Parsing.

	public AliensForJavascript = ns AliensForJavascript.
	public Collections = ns Collections.
	public FilesForNodeJS = ns FilesForNodeJS.
	public FilesForRhino = ns FilesForRhino.
	public JsExceptions = ns JsExceptions.
	public JsKernel = ns JsKernel.
	public NewspeakMirrorsForJavascript = ns NewspeakMirrorsForJavascript.
	public NSStreams = ns NSStreams.
	public Time = ns TimeForJS.

	public aliens
	public exceptions
	public collections
	public kernel
	public mirrors
	public streams
	public files
	public time
|)
('as yet unclassified'
buildNewspeakParser= (

	| parserLib ns3Grammar astModule parsingModule |

	parserLib:: BlocklessCombinatorialParsing
		usingLib: self.

	ns3Grammar:: Newspeak3Grammar	parserLib: parserLib.

	astModule:: Newspeak3AST	usingLib: self.

	parsingModule:: Newspeak3Parsing
		usingLib: self
		ast: astModule
		grammar: ns3Grammar.

	^ parsingModule Parser new
)
initialize = (
	aliens:: Delay computation: [AliensForJavascript usingPlatform: self].
	exceptions:: Delay computation: [JsExceptions usingPlatform: self].
	collections:: Delay computation: [Collections usingPlatform: self].
	kernel:: Delay computation: [JsKernel new].
	mirrors:: Delay computation: [
		"We must set mirrors explicitly here, as it is being referred to by buildNewspeakParser"
		mirrors:: NewspeakMirrorsForJavascript usingPlatform: self.
		mirrors at: #Newspeak putParser: buildNewspeakParser.
		mirrors].
	streams:: Delay computation: [NSStreams usingPlatform: self].
	files:: Delay computation: [ (aliens javascriptEngineName) = 'NodeJS'
									ifTrue: [ FilesForNodeJS usingPlatform: self ]
									ifFalse: [ FilesForRhino usingPlatform: self "default to Rhino" ]].
	time:: Time usingPlatform: self.
)) : ()