Newspeak3
'Samples'
class CodeMirrorDemo  packageUsing: manifest = (
(*An experiment integrating CodeMirror into the Newspeak UI.*)
|

|
) (
class Demo usingPlatform: p = (
(* Describe the class in this comment. *)
|
	Subject = p hopscotch core Subject.
	Presenter = p hopscotch core Presenter.
	TextEditorFragment = p hopscotch fragments TextEditorFragment.
	CodeMirror = p aliens global at: 'CodeMirror'.
|
) (
class DemoPresenter onSubject: s = Presenter onSubject: s (
(* A test class for using CodeMirror in HopscotchForHTML. *)
|
editor <CodeMirrorFragment>
|
) (
public definition ^ <Fragment> = (
    editor::  codeMirror: 
      'forEach: i <Integer> do: b <[String]> = (
  1 to: i do: [:j | b value].
)'.
     ^column: {
         textString: 'Below is a CodeMirror text editor:'.
         editor.
       }
)
public setupEditor = (
	editor refresh
)
) : (
)
public class DemoSubject new = Subject onModel: nil (
(* Describe the class in this comment. *)
|
|
) (
public createPresenter = (
	^DemoPresenter onSubject: self
)
public setupEditor = (
	presenter setupEditor
)
) : (
)
) : (
)
public main: platform args: args = (
	| 
	demo <Demo> = Demo usingPlatform: platform. 
	demoSubject = demo DemoSubject new. 
	|
	platform hopscotch core HopscotchWindow openSubject: demoSubject.
	demoSubject setupEditor.
)
) : (
)
