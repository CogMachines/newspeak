Newspeak3
'OrthogonalSynchronization'
public class ToDoListExample usingPlatform: platform  = (
|
	Presenter =  platform hopscotch core Presenter.
	Subject  =  platform hopscotch core Subject.
	List = platform collections List.
	HopscotchWindow = platform hopscotch core HopscotchWindow.
|
) (
public class ToDoListPresenter onSubject: s  = Presenter onSubject: s (
|
	counter  ::= 10.
	content
|
) (
definition  = (
	content:: list.
	refreshTasks.
	^ column: {
		link: 'New task' action: [respondToAdd] . 
		content 
	}. 

)
definitionForTasks = (
	^ subject subjectElements collect: [:each | each createPresenter]
)
refreshTasks = (
	content presenters: definitionForTasks.
)
public removeTaskInPresenter: presenter  = (
	subject removeTaskWithSubject: presenter subject.
	refreshTasks.
)
respondToAdd = (
	subject newTask: 'This is a new task '  , counter asString.
	counter:: counter + 1.
	refreshTasks.
)
) : (
)
public class ToDoListSubject onModel: m  = Subject onModel: m  (
|
|
) (
public createPresenter = (
	^ ToDoListPresenter onSubject: self.
)
public newTask: task = (
	model add: task.
)
public removeTaskWithSubject: subject  = (
	model remove: subject task.
)
public subjectElements = (
	
	^model collect: [:each |  ToDoSubject onModel: each ].
)
) : (
)
public class ToDoListSyncRoot = (
|
public model
|
) (
) : (
)
class ToDoPresenter onSubject: s = Presenter onSubject: s (

) (
definition = (
	^ row: {
				label: subject task.
				blank: 3. 
				link: 'Remove'  action: [respondToRemove]
	}

)
respondToRemove = (
	sendUp removeTaskInPresenter: self.
)
) : (
)
public class ToDoSubject onModel:  m = Subject onModel: m (
) (
public createPresenter = (
	^ToDoPresenter onSubject: self.
)
public task = (
	^ model
)
) : (
)
) : (
)
