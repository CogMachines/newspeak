Newspeak3
'NS2 Combinatorial Parsing'
class FBCPTests usingPlatform: platform parserLib: lib testFramework: minitest = (|
	ExecutableGrammar = lib ExecutableGrammar.
	TestContext = minitest TestContext.
|)
(
class SimpleExpressionGrammar = ExecutableGrammar (|
	start = exp, eoi wrapper: [:v :dollar | v].
	exp = e1, (plus, e1) star wrapper: [:lhs :rhss | 
		| z ::= lhs. | rhss do: [:rhs | z: z + (rhs at: 2)]. z].
	e1 = e2, (times, e2) star wrapper: [:lhs :rhss | 
		| z ::= lhs. | rhss do: [:rhs | z: z * (rhs at: 2)]. z].
	e2 = number | parenExp.
	
	parenExp = lparen, exp, rparen wrapper: [:lhs :e :rhs | e].
	
	number = digit wrapper: [:d | d asString asNumber].
	
	plus = char: $+.
	times = char: $*.
	digit = charBetween: $0 and: $9.
	lparen = char: $(.
	rparen = char: $). 
|)
() : ()
class Tests = TestContext (|
|)
('as yet unclassified'
test1 = (
	assert: [(SimpleExpressionGrammar new fastStart parse: '1+2*3' readStream) = 7]
)) : ('as yet unclassified'
TEST_CONTEXT = (
))) : ()