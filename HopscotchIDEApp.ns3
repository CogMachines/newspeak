Newspeak3
'HopscotchIDE'
class HopscotchIDEApp packageUsing: n <Namespace> = (
(* Application object for the IDE.  A Newspeak application is an object that responds to the message main:args:.  The Newspeak runtime invokes main:args: with a platform object (see NsPlatform) and a collection of any runtime arguments.  An application typically responds to main:args: by instantiating and wiring together modules definitions it has stored in its slots or (in the future) modules definitions it retrives from the network via the platform object.  By convention, if a top-level class implements packageUsing:, the IDE will provide links to automatically send packageUsing: with the IDE namespace and serialize the returned object to a NOF file or package it into a Windows EXE (and someday options for Mac, Linux and the web). *)|
	Tools = n HopscotchIDE IDETools.
	Browsing = n HopscotchIDE Browsing.
	SmalltalkBrowsing = n HopscotchIDE SmalltalkBrowsing.
	Newspeak3Browsing = n HopscotchIDE Newspeak3Browsing.
	MiscBrowsing = n HopscotchIDE MiscBrowsing.
	Inspecting = n HopscotchIDE Inspecting.
	Debugging = n HopscotchIDE Debugging.
	ProcessFinalizer = n HopscotchIDE ProcessFinalizer.
	WorkspaceManager = n HopscotchIDE WorkspaceManager.
	LanguageUiDescriptionRegistry = n HopscotchIDE LanguageUiDescriptionRegistry.
	Minitest = n Minitest Minitest.
	MinitestUI = n Minitest MinitestUI.
	SystemScope = n SystemScope SystemScope.
	
	vcsLib = n VCSLib packageUsing: n.
	|)
(
class HopscotchIDE using: p <Platform> = (
(* I am to the IDE as Platform is to the runtime.  I wire together and store the IDE modules. *)|| (* Siml slots *)
	tools = Tools usingPlatform: p ide: self.
	browsing = Browsing usingPlatform: p ide: self.
	browsingST = SmalltalkBrowsing usingPlatform: p ide: self.
	browsingNS3 = Newspeak3Browsing usingPlatform: p ide: self.
	browsingMisc = MiscBrowsing usingPlatform: p ide: self.
	inspection = Inspecting usingPlatform: p ide: self.
	debugging = Debugging usingPlatform: p ide: self.
	finalizer = ProcessFinalizer usingPlatform: p ide: self debuggerClass: debugging Debugger.
	theWorkspaceManager = WorkspaceManager usingPlatform: p ide: self.
	minitest = Minitest usingPlatform: p.
	minitestUI = MinitestUI usingPlatform: p minitest: minitest ide: self.
	languageUiDescriptionRegistry = LanguageUiDescriptionRegistry usingPlatform: p ide: self.
	systemScope = SystemScope usingPlatform: p.
	
	vcs (* memoryhole *) = vcsLib usingPlatform: p ide: self.
	namespace = p blackMarket.
	
	defaultPopularityRecord = tools PopularityRecord new.
||)
('as yet unclassified'
IDEWindow = (
	^tools IDEWindow
)) : ()'as yet unclassified'
main: p <Platform> args: v <Tuple[String]> = (
	| ide = HopscotchIDE using: p. |
	(* ide tools IDEWindow open. *)
	^ide
)) : ()