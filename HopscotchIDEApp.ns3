Newspeak3
'HopscotchIDE'
class HopscotchIDEApp packageUsing: manifest = (
(* Application object for the IDE.  A Newspeak application is an object that responds to the message main:args:.  The Newspeak runtime invokes main:args: with a platform object (see NsPlatform) and a collection of any runtime arguments.  An application typically responds to main:args: by instantiating and wiring together modules definitions it has stored in its slots or (in the future) modules definitions it retrives from the network via the platform object.  By convention, if a top-level class implements packageUsing:, the IDE will provide links to automatically send packageUsing: with the IDE namespace and serialize the returned object to a NOF file or package it into a Windows EXE (and someday options for Mac, Linux and the web). *)|
	Tools = manifest IDETools.
	Browsing = manifest Browsing.
	SmalltalkBrowsing = manifest SmalltalkBrowsing.
	Newspeak3Browsing = manifest Newspeak3Browsing.
	MiscBrowsing = manifest MiscBrowsing.
	Namespacing = manifest Namespacing.
	Inspecting = manifest Inspecting.
	Debugging = manifest Debugging.
	ProcessFinalizer = manifest ProcessFinalizer.
	WorkspaceManager = manifest WorkspaceManager.
	LanguageUiDescriptionRegistry = manifest LanguageUiDescriptionRegistry.
	Minitest = manifest Minitest.
	MinitestUI = manifest MinitestUI.
	SystemScope = manifest SystemScope.
	NewspeakColorization = manifest NewspeakColorization.
	
	vcsLib = manifest VCSLib packageUsing: manifest.
	jsPackagingLib = manifest NS2V8ApplicationPackaging packageUsing: manifest.
	dartPackagingLib = manifest NS2DartApplicationPackaging packageUsing: manifest.
	
	|)
(
class HopscotchIDE using: p <Platform> = (
(* I am to the IDE as Platform is to the runtime.  I wire together and store the IDE modules. *)|| (* Siml slots *)
	tools = Tools usingPlatform: p ide: self.
	browsing = Browsing usingPlatform: p ide: self.
	browsingST = SmalltalkBrowsing usingPlatform: p ide: self.
	browsingNS3 = Newspeak3Browsing usingPlatform: p ide: self.
	browsingMisc = MiscBrowsing usingPlatform: p ide: self.
	namespacing = Namespacing usingPlatform: p.
	inspection = Inspecting usingPlatform: p ide: self.
	debugging = Debugging usingPlatform: p ide: self.
	finalizer = ProcessFinalizer usingPlatform: p ide: self debuggerClass: debugging Debugger.
	theWorkspaceManager = WorkspaceManager usingPlatform: p ide: self.
	minitest = Minitest usingPlatform: p.
	minitestUI = MinitestUI usingPlatform: p minitest: minitest ide: self.
	languageUiDescriptionRegistry = LanguageUiDescriptionRegistry usingPlatform: p ide: self.
	systemScope = SystemScope usingPlatform: p.
	newspeakColorization = NewspeakColorization usingPlatform: p.
	vcs (* memoryhole *) = vcsLib usingPlatform: p ide: self.
	jsPackaging = jsPackagingLib.
	dartPackaging = dartPackagingLib.

	webPackager	
	defaultPopularityRecord = tools PopularityRecord new.
	settings = IDESettings new.
||webPackager: nil)
(
class IDESettings = (|
public showNamespacePresenter ::= false.
public useExemplarPresenters ::= false.
|)
() : ()'as yet unclassified'
IDEWindow = (
	^tools IDEWindow
)) : ()'as yet unclassified'
main: p <Platform> args: v <Tuple[String]> = (
	| ide = HopscotchIDE using: p. |
	(*` ide tools IDEWindow open.*)
	^ide
)) : ()