Newspeak3
'Mirrors'
class ActivationMirrorTesting usingPlatform: p minitest: m = (|
private ActivationMirror = p mirrors ActivationMirror.
private ObjectMirror = p mirrors ObjectMirror.
private TestContext = m TestContext.
|) (
public class ClosureActivationTests = TestBase () (
public testClosureActivation = (
	| closure activation |
	closure:: [3 + 4].
	activation:: ActivationMirror evaluating: closure.
	assert: activation closure equals: (ObjectMirror reflecting: closure).
)
) : (
TEST_CONTEXT = ()
)
class TestBase = TestContext () (
assertList: actual equals: expected = (
	1 to: actual size do: 
		[:index | assert: (actual at: index) equals: (expected at: index)].
)
assertSet: actual equals: expected = (
	| missing extra missingString extraString |
	missing:: Set new.
	missing addAll: expected.
	actual do: [:element | missing remove: element ifAbsent: []].
	extra:: Set new.
	extra addAll: actual.
	expected do: [:element | extra remove: element ifAbsent: []].
	(missing isEmpty and: [extra isEmpty]) ifTrue: [^self].	
	
	missingString: ''.
	missing do: [:element | missingString: missingString, ' ', element printString].
	extraString: ''.
	extra do: [:element | extraString: extraString, ' ', element printString].
	
	failWithMessage: 'Missing:', missingString, ' Extra:', extraString.
)
in: collection findMirrorNamed: name = (
	collection do: [:mirror | mirror name = name ifTrue: [^mirror]].
	^nil
)
) : (
)
) : (
)
