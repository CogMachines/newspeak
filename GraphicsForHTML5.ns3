Newspeak3
'NSGraphics'
class GraphicsForHTML5 usingPlatform: p = (|
document = p aliens global at: 'document'.
body = document at: 'body'.
|)
(
class Color scaledR: r g: g b: b a: a = (|
red <Integer> = r.
green <Integer> = g.
blue <Integer> = b.
alpha <Integer> = a.
|)
('as yet unclassified'
asCSSString = (
	^'rgba(', red printString, ',', green printString, ',', blue printString, ',', alpha printString, ')'
)) : ('as yet unclassified'
h: r s: g v: b = (
	unimplemented
)
r: r g: g b: b = (
	^self scaledR: (r * 255) floor g: (g * 255) floor b: (b * 255) floor a: 255
)
r: r g: g b: b a: a = (
	^self scaledR: (r * 255) floor g: (g * 255) floor b: (b * 255) floor a: a
))
class Context on: a = (|
alien = a.
|)
('as yet unclassified'
arcAt: center radius: radius from: startAngle to: stopAngle = (
	alien arc: center x with: center y with: radius with: startAngle with: stopAngle
)
beginPath = (
	alien beginPath.
)
fill = (
	alien fill.
)
fillStyle: c <Color> = (
	alien at: 'fillStyle' put: c asCSSString.
)
rectangle: r = (
	alien rect: r origin x with: r origin y with: r extent x with: r extent y
)
stroke = (
	alien stroke.
)
strokeStyle: c <Color> = (
	alien at: 'strokeStyle' put: c asCSSString
)) : ()
class Point x: xCoord y: yCoord = (|
x <Number> = xCoord.
y <Number> = yCoord.
|)
('as yet unclassified'
= other <Object> ^<Boolean> = (
	^other isPoint and: [x = other x and: [y = other y]]
)
corner: corner <Point> ^<Rectangle> = (
	^Rectangle origin: self corner: corner
)
extent: extent <Point> ^<Rectangle> = (
	^Rectangle origin: self extent: extent
)
hash ^<Integer> = (
	^x hash bitXor: y hash
)
isPoint ^<Boolean> = (
	^true
)
printString ^<String> = (
	^x printString, ' @ ', y printString
)
r ^<Number> = (
	^((x*x) + (y*y)) sqrt
)
theta ^<Number> = (
	Error signal: 'Unimplemented'
)) : ('as yet unclassified'
r: r <Number> theta: theta <Number> ^<Point> = (
	^self x: r * theta cos y: r * theta sin
)
zero ^<Point> = (
	^self x: 0 y: 0
))
class Rectangle origin: o corner: c = (|
origin <Point> = o.
corner <Point> = c.
|)
('as yet unclassified'
= other ^<Boolean> = (
	^other isRectangle and: [origin = other origin and: [corner = other corner]]
)
extent = (
	^Point x: corner x - origin x y: corner y - origin y 
)
hash ^<Integer> = (
	^origin hash bitXor: corner hash
)
isRectangle ^<Boolean> = (
	^true
)
printString ^<String> = (
	^'Rectangle origin: ', origin printString, ' corner: ', corner printString
)) : ('as yet unclassified'
origin: o <Point> extent: e <Point> ^<Rectangle> = (
	^self origin: o corner: (Point x: o x + e x y: o y + e y)
))'as yet unclassified'
insertCanvas = (
	| canvas | 
	canvas:: document createElement: 'canvas'.
	canvas at: 'width' put: 800.
	canvas at: 'height' put: 600.
	body appendChild: canvas.
	^Context on: (canvas getContext: '2d')
)) : ()