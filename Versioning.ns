Newspeak3
'OrthogonalSynchronization'
class Versioning usingPlatform: platform = (
|
	List = platform collections List.
	Map = platform collections Map.
	Set = platform collections Set.
	
|
) (
class CompoundVersionId principal: aPrincipalId version: aVersionId  = (
|
	principalId = aPrincipalId.
	versionId = aVersionId.
|
) (
) : (
)
class IdGenerator seed: aSeed nextIdBlock: aBlock = (
|
	lastValue = aSeed.
	nextIdBlock = aBlock.
|
) (
public newId = (
	lastValue = nextIdBlock value: lastValue.
	^ lastValue.
)
) : (
)
class InitialVersion id:  anId    = (
|
	
	public versionId = 0.
	public principalId	= anId.
	idGenerator = IdGenerator seed: 0 nextIdBlock: [:x | x + 1].
	public childVersions = List new.

 |
) (
public initialVersion  = (
	^ self.
)
) : (
)
class ObjectVersion withParent: aParent versionedData: dataToVersion  = Version withParent: aParent (
|
	versionedData = dataToVersion.
|
) (
) : (
)
class Store name: aName identifiedBy: anId  = (
|
	name = aName.
	initialVersion = InitialVersion id: anId.
	versionsById = Map new.
|
) (
public id = (
	^ initialVersion principalId.
)
public versionIdentifiedBy: aVersionId   = (
	^ versionsById at: aVersionId.
	
)
) : (
)
class StoreVersion = Version (
|
	newVersionsById = Map new.
	deletedVersionIds = Set new.
|
) (
) : (
)
class UnitOfWork = (
|
	slot1
	slot2
|
) (
) : (
)
class Version withParent: aParent  = (
|
	versionId = aParent initialVersion generateNextVersionId.
	parentVersion = aParent.
	childVersions = List new.
|
) (
public createChildVersionIn: aUnitOfWork  = (
	error.
)
public initialVersion = (
	parentVersion initialVersion.
)
public principalId = (
	^ parentVersion principalId.
)
public printOn: aStream = (
	aStream nextPutAll: ' Version: '.
	aStream print: uniqueId.
	aStream nextPutAll: ' for: '.
	aStream print: versionType.
)
public uniqueId = (
	^ CompoundVersionId principal: parentVersion principalId versionId: versionId.
)
public versionType = (
	^ initialVersion versionType.
)
) : (
)
class VersionsRepository = (
|
	storesById = Map new.
	idGenerator = IdGenerator seed: 0 nextIdBlock: [:x | x + 1].
|
) (
public createStoreNamed: aName  = (
	| newStore |
	newStore:: Store name: aName identifiedBy: idGenerator newId.
	storesById at: newStore id put: newStore. 
)
) : (
)
) : (
)
