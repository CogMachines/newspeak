Newspeak3
'Samples'
class Words packageUsing: manifest = (|
	wordsByFrequency ::= manifest wordsByFrequency.
|) (
class WordsUI usingPlatform: p = (|
	Subject = p hopscotch core Subject.
	Presenter = p hopscotch core Presenter.
	Timer = p time Timer.
	randomFunc
|[| Math = p aliens global at: 'Math'. |
	randomFunc:: [Math random]] 
		on: Error 
		do: [ | random = p squeak Random new. | randomFunc:: [random next]]) (
class DictionaryPresenter onSubject: s = Presenter onSubject: s (| contentHolder refreshTimer |) (
'as yet unclassified'
definition = (
	refreshTimer:: Timer every: 1000 do: [contentHolder refresh].
	^contentHolder:: holder: [label: subject nextWord]
)
noticeConcealment = (
	refreshTimer isNil ifFalse: [refreshTimer cancel. refreshTimer:: nil].
)
noticeExposure = (
	refreshTimer isNil ifFalse: [refreshTimer cancel. refreshTimer:: nil].
	refreshTimer:: Timer every: 1000 do: [refresh].
)
) : (
)
public class DictionarySubject onModel: m = Subject onModel: m () (
'as yet unclassified'
createPresenter = (
	^DictionaryPresenter onSubject: self
)
public nextWord = (
	^wordsByFrequency at: (randomFunc value * wordsByFrequency size) floor.
)
public title = (
	^'Words'
)
) : (
)
) : (
)
'as yet unclassified'
public main: platform args: args = (
	wordsByFrequency:: wordsByFrequency splitBy: ' '.
	platform hopscotch core HopscotchWindow openSubject:
		((WordsUI usingPlatform: platform) DictionarySubject onModel: wordsByFrequency).
)
) : (
)
