Newspeak3
'AliensForJavascript'
class AliensInV8TestingConfiguration packageTestsUsing: ns = (
"Run the alien / expat tests using Javascript/V8.
   Copyright 2012 SAP AG.
   
   Licensed under the Apache License, Version 2.0 (the ''License''); you may not use this file except in compliance with the License.  You may obtain a copy of the License at  http://www.apache.org/licenses/LICENSE-2.0
"|

	CP = ns NS2CombinatorialParsing CombinatorialParsing.
	BCP = ns NS2CombinatorialParsing BlocklessCombinatorialParsing.
	BlocklessCombinatorialParsing = BCP mixin |> CP.
	Newspeak3AST = ns Newspeak3AST.
	Newspeak3Compilation = ns Newspeak3Compilation.
	Newspeak3Grammar = ns Newspeak3Grammar.
	NewspeakMirrors = ns NewspeakMirrorsForSqueak.
	Newspeak3Parsing = ns Newspeak3Parsing.
	JavascriptGeneration = ns JavascriptGeneration.
	Newspeak2JavascriptCompilation = ns Newspeak2JavascriptCompilation.
	NS2JSCompilerTesting = ns NS2JSCompilerTesting.

	NSCompilerTesting = ns NSCompilerTesting.
	CommandLineV8TestingStrategy = ns CommandLineV8TestingStrategy.

	private NewspeakMirrorsForJavascript = ns NewspeakMirrorsForJavascript NewspeakMirrorsForJavascript.
	private AliensForJavascriptTesting = ns AliensForJavascriptTesting.
	private AliensForJavascript = ns AliensForJavascript AliensForJavascript.
|)
('as yet unclassified'
aliensModuleSource = (

	^ (sourceOf: NewspeakMirrorsForJavascript), 
	'class TestingPlatform = (|mirrors = NewspeakMirrorsForJavascript usingPlatform: self.|)()',
	(sourceOf: AliensForJavascript)
)
createAliensSource = (

	^ 'AliensForJavascript usingPlatform: TestingPlatform new'
)
sourceOf: module = (

	| fileSource sourceWithNewspeakObject |
	fileSource:: String streamContents: [:s |
		module printClassOn: s].
	sourceWithNewspeakObject:: fileSource
		copyFrom: (fileSource indexOfSubCollection: 'class')
		to: fileSource size.
	^ sourceWithNewspeakObject
		copyReplaceAll: '= NewspeakObject'
		with: '='
)
strategyUsingPlatform: platform = (

	| parserLib ns3grammar astModule parsingModule mirrors compilationModule |
	parserLib:: BlocklessCombinatorialParsing usingLib: platform.
	ns3grammar:: Newspeak3Grammar parserLib: parserLib.
	astModule:: Newspeak3AST usingLib: platform.
	parsingModule:: Newspeak3Parsing usingLib: platform ast: astModule grammar: ns3grammar.
	mirrors:: NewspeakMirrors usingLib: platform.
	compilationModule:: Newspeak2JavascriptCompilation
		usingPlatform: platform
		newspeakParser: parsingModule
		javascriptGeneration: (JavascriptGeneration usingPlatform: platform)
		mirrorLib: (NewspeakMirrors usingLib: platform).
	^ CommandLineV8TestingStrategy
		platform: platform
		compilerModule: compilationModule
		v8path: '/usr/local/bin/v8'
		temporaryDirectoryPath: '/tmp'.
)
testModulesUsingPlatform: platform <Platform> minitest: minitest <Minitest> = (

	| strategy |
	strategy:: strategyUsingPlatform: platform.
	  ^ {AliensForJavascriptTesting
			usingPlatform: platform
			aliensModuleSource: aliensModuleSource
			createAliensSource: createAliensSource
			testingStrategy: strategy
			testFramework: minitest}
	)) : ()