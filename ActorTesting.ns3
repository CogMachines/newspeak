Newspeak3
'Actors'
class ActorTesting usingPlatform: p actors: a minitest: m = (|
	private TestContext = m TestContext.
	private Semaphore = p squeak Semaphore.
	private actors = a.
|)
(
class ActorTests = TestContext (|
|)
(
class Math = (|
|)
('as yet unclassified'
factorial: n <Integer> ^ <Integer> = (
	n = 0 ifTrue: [ ^1 ]. 
	^(self ESEND factorial: n - 1) ESEND * n
)
fibonacci: n = (
	n = 0 ifTrue: [ ^0 ].
	n = 1 ifTrue: [ ^1 ].
	^(self ESEND fibonacci: n - 1) ESEND + (self ESEND fibonacci: n - 2)
)
isPositive: n = (
	^n > 0
)) : ()
class Ping = (|
other
|)
('as yet unclassified'
pong: n sum: m = (
	n <= 0 ifTrue: [^m].
	^other ESEND ping: n - 1 sum: n + m
)
start = (
	^other ESEND ping: 10 sum: 0
)) : ()
class Pong = (|
other
|)
('as yet unclassified'
ping: n sum: m = (
	^other ESEND pong: n - 1 sum: n + m
)) : ()'as yet unclassified'
testFactorial = (
	|
	math = (actors createActorFromValue: Math) ESEND new.
	result
	|
	result:: waitFor: (math ESEND factorial: 9).
	assert: [result = 362880].
)
testFibonacci = (
	|
	math = (actors createActorFromValue: Math) ESEND new.
	result
	|
	result:: waitFor: (math ESEND fibonacci: 9).
	assert: [result = 34].
)
testIfTrue = (
	|
	math = (actors createActorFromValue: Math) ESEND new.
	tookTruePath ::= false.
	result
	|
	fail.
	result:: waitFor: ((math ESEND isPositive: 9) ESEND ifTrue: [tookTruePath:: true. 7]).
	assert: [result = 7].
	assert: [tookTruePath].
)
testPingPong = (
	|
	ping = (actors createActorFromValue: Ping) ESEND new.
	pong = (actors createActorFromValue: Pong) ESEND new.
	result
	|
	ping ESEND other: pong.
	pong ESEND other: ping.
	result:: waitFor: ping ESEND start.
	assert: [result = 55].
)
waitFor: promise = (
	|
	timedOut ::= true.
	resolution
	sem = Semaphore new.
	|
	promise whenResolved: 
		[:r |
		resolution: r.
		timedOut:: false.
		sem signal].
	sem waitTimeoutMSecs: 200.
	timedOut ifTrue: [failWithMessage: 'Timed out'].
	^resolution
)) : ('as yet unclassified'
TEST_CONTEXT = (
))) : ()